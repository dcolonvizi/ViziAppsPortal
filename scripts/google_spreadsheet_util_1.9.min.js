function doGoogleDocsInterface(a, b) { showLoading(); GoogleDocsSqlCommands = b; var c = a.split(";"); var d = null; var e = null; var f = null; var g = null; var h = null; var i = null; for (var j = 0; j < c.length; j++) { var k = c[j].split("="); if (k[0] == "spreadsheet") d = k[1]; else if (k[0] == "username") e = k[1]; else if (k[0] == "password") f = k[1]; else if (k[0] == "consumer_key") g = k[1]; else if (k[0] == "consumer_secret") h = k[1]; else if (k[0] == "requestor_id") i = k[1] } if (f != null) { initGoogleDocsParams = "?username=" + e + "&password=" + f + "&spreadsheet=" + escape(d); doGoogleApps = false } else { initGoogleDocsParams = "?requestor_id=" + i + "&consumer_key=" + g + "&consumer_secret=" + h + "&spreadsheet=" + escape(d); doGoogleApps = true } nSqlCommands = b.length; sqlCommandIndex = 0; doSqlCommand() } function doSqlCommand() { GoogleDocsParams = initGoogleDocsParams; var a = GoogleDocsSqlCommands[sqlCommandIndex]; if (!a) return; a.each(function (a, b) { var c = a; var d = b }); var b = a.get("command"); if (b.toLowerCase() == "if") { var c = a.get("command_condition_device_field1"); var d = a.get("command_condition_operation"); var e = a.get("command_condition_device_field2"); var f = null; var g = null; var h = getFieldValue(c); if (h != null) { f = h } else { f = getFieldValue(c); if (f == null) f = c } h = getFieldValue(e); if (h != null) { g = h } else { g = getFieldValue(e); if (g == null) g = e } if (d == "=") { if (f == g) { GoogleDocs_if_condition = true } else GoogleDocs_if_condition = false } else { if (!f == g) { GoogleDocs_if_condition = true } else GoogleDocs_if_condition = false } GoogleDocs_ready_for_then = true; shouldDoSqlCommand(); return } else { var i = a.get("table"); GoogleDocsParams += "&table=" + escape(i); if (startsWith(b, "then")) { if (GoogleDocs_ready_for_then && !GoogleDocs_if_condition) { GoogleDocs_ready_for_then = false; GoogleDocs_ready_for_else = true; shouldDoSqlCommand(); return } } else if (startsWith(b, "else")) { if (!GoogleDocs_ready_for_else) { GoogleDocs_ready_for_else = false; shouldDoSqlCommand(); return } } GoogleDocs_ready_for_else = false; GoogleDocs_ready_for_then = false; if (startsWith(b, "then") || startsWith(b, "else")) { b = b.substring(5) } if (b == "go to page") { var j = a.get("page"); $.mobile.changePage($("#" + j), { transition: viziapps_transition_type }); shouldDoSqlCommand(); return } var k = a.get("database_fields"); if (k != null) { var l = new Array; var m = new Array; for (var n = 0; n < k.length; n++) { var o = k[n]; if (o.length == 0) continue; l[n] = o.get("database_field"); m[n] = o.get("device_field") } } var p = true; var q = 0; b = b.toLowerCase(); GoogleDocsParams += "&query_type=" + escape(b); var r = a.get("conditions"); var s = ""; if (r != null && r.length > 0) { for (var t = 0; t < r.length; t++) { var u = r[t]; if (t > 0) { var v = u.get("condition_operation"); s += " " + v.toLowerCase() + " " } s += u.get("condition_1st_field"); s += u.get("field_operation"); var h = u.get("condition_2nd_field"); var w = getFieldValue(h); if (w != null) { h = w } h = "|" + h + "| "; if (h == null) { alert("Internal Error", "Parameter has null value"); return } s += h } GoogleDocsParams += "&conditions=" + escape(s) } if (b == "select from") { var x = ""; var y = ""; var z = a.get("order_by"); if (z != null) { x = z.get("sort_field"); sort_direction = z.get("sort_direction"); GoogleDocsParams += "&order_by=" + x + "&sort_direction=" + sort_direction.toLowerCase() } googleSpreadsheetQuery(GoogleDocsParams) } else if (b == "insert into") { var A = ""; for (var t = 0; t < l.length; t++) { var B = l[t]; var C = m[t]; var h = null; if (isImageField(C)) { } else { var w = getFieldValue(C); if (w != null) { h = w } } if (h == null) h = C; A += B + "=|" + h + "|;" } GoogleDocsParams += "&insert=" + escape(A); googleSpreadsheetQuery(GoogleDocsParams) } else if (b == "update") { var D = ""; for (var t = 0; t < l.length; t++) { var B = l[t]; var C = m[t]; var h = null; if (isImageField(C)) { } else { var w = getFieldValue(C); if (w != null) { h = w } } if (h == null) h = C; D += B + "=|" + h + "|;" } GoogleDocsParams += "&update=" + escape(D); googleSpreadsheetQuery(GoogleDocsParams) } else if (b == "delete from") { googleSpreadsheetQuery(GoogleDocsParams) } } } function parseSelectResponse(a) { if (a != null) { var b = new Hashtable; var c = GoogleDocsSqlCommands[sqlCommandIndex]; var d = c.get("database_fields"); for (var e = 0; e < d.length; e++) { var f = d[e]; var g = f.get("database_field"); var h = f.get("device_field"); b.put(g, h) } if (a.row.length == undefined) { var i = a.row; for (var j = 0; j < i.field.length; j++) { var k = i.field[j]; if (!b.containsKey(k)) continue; var h = b.get(k); var l = i.value[j]; if (getFieldType(h) == "alert") { hideLoading(); showAlert(h, "Data Alert", l) } else setFieldValue(h, l) } } else { var m = a.row.length; var n = a.row[0].field.length; for (var o = 0; o < n; o++) { var k = a.row[0].field[o]; if (!b.containsKey(k)) continue; var h = b.get(k); var p = new Array(m); for (var q = 0; q < m; q++) { p[q] = a.row[q].value[o] } setFieldArrayValues(h, p) } } } } function googleSpreadsheetQuery(a) { var b = null; if (doGoogleApps) b = google_apps_spreadsheet_web_service_url + a + "&callback=?"; else b = google_spreadsheet_web_service_url + a + "&callback=?"; var c = setTimeout("hideLoading()", 1e4); isGoogleDocsBusy = true; $.getJSON(b, function (a) { if (a.response.status == "success") { var b = GoogleDocsSqlCommands[sqlCommandIndex]; var c = b.get("command"); if (startsWith(c, "then") || startsWith(c, "else")) { c = c.substring(5) } if (c.toLowerCase() == "select from") parseSelectResponse(a.response.rows); sqlCommandIndex++; if (sqlCommandIndex >= nSqlCommands) hideLoading(); isGoogleDocsBusy = false } else { isGoogleDocsBusy = false; hideLoading(); alert("Error in spreadsheet operation: " + a.response.status) } }); intervalID = setInterval("waitForGoogleDocs()", 50) } function waitForGoogleDocs() { if (!isGoogleDocsBusy) { clearInterval(intervalID); if (sqlCommandIndex < nSqlCommands) doSqlCommand() } } function shouldDoSqlCommand() { sqlCommandIndex++; if (sqlCommandIndex < nSqlCommands) doSqlCommand(); else hideLoading() } function getJsonObjects(a, b, c) { var d = []; for (var e in a) { if (!a.hasOwnProperty(e)) continue; if (typeof a[e] == "object") { d = d.concat(getJsonObjects(a[e], b, c)) } else if (e == b && a[b] == c) { d.push(a) } } return d } function startsWith(a, b) { return a.indexOf(b) == 0 } var google_spreadsheet_web_service_url = "http://viziapps.mobi/mobiflex/WebServices/GoogleDocs/GoogleSpreadsheet.aspx"; var google_apps_spreadsheet_web_service_url = "http://www.viziapps.mobi/gapps/default.aspx"; var GoogleDocsParams; var initGoogleDocsParams; var nSqlCommands; var isGoogleDocsBusy = false; var sqlCommandIndex; var GoogleDocs_if_condition = false; var GoogleDocs_ready_for_then = false; var GoogleDocs_ready_for_else = false; var GoogleDocsSqlCommands; var doGoogleApps = false; var intervalID; String.prototype.replaceAll = function (a, b) { var c = this; var d = c.indexOf(a); while (d != -1) { c = c.replace(a, b); d = c.indexOf(a) } return c }