function setStyle2(a, b) { var c = style2.split(";"); for (var d = 0; d < c.length; d++) { var e = c[d].split(":"); if (e[0].replace(" ", "").toLowerCase() == a) { e[1] = b; c[d] = e[0] + ":" + e[1]; style2 = ""; for (var f = 0; f < c.length; f++) { if (f < c.length - 1) style2 += c[f] + ";"; else style2 += c[f] } return } } } function setStyle(a, b) { var c = style.split(";"); for (var d = 0; d < c.length; d++) { var e = c[d].split(":"); if (e[0].replace(" ", "").toLowerCase() == a) { e[1] = b; c[d] = e[0] + ":" + e[1]; style = ""; for (var f = 0; f < c.length; f++) { if (f < c.length - 1) style += c[f] + ";"; else style += c[f] } return } } } function getStyleSplit(a) { for (var b = 0; b < a.length; b++) { if (a[b] == null || a[b].length == 0) continue; var c = a[b].split(":"); c[0] = c[0].toLowerCase().replace(" ", ""); if (c.length > 1) c[1] = c[1].replace(" ", ""); switch (c[0]) { case "font-family": FontFamilyCombo.trackChanges(); var d = FontFamilyCombo.findItemByText(c[1]); if (d) { d.select() } FontFamilyCombo.commitChanges(); break; case "font-size": FontSizeCombo.trackChanges(); var d = FontSizeCombo.findItemByText(c[1]); if (d) { d.select() } FontSizeCombo.commitChanges(); break; case "color": SetColor(c[1]); break; case "font-weight": var e = document.getElementById("Bold"); if (e != null) { if (c[1] == "bold") e.checked = true; else e.checked = false } break; case "font-style": var f = document.getElementById("Italic"); if (f != null) { if (c[1] == "italic") f.checked = true; else f.checked = false } break; case "text-decoration": var g = document.getElementById("Underline"); if (g != null) { if (c[1] == "underline") g.checked = true; else g.checked = false } break } } } function getStyle2() { var a = style2.split(";"); getStyleSplit(a) } function getStyle() { var a = style.split(";"); getStyleSplit(a) } function setStyleFromLocation(a) { var b = ""; var c = a.split(";"); for (i in c) { var d = c[i].split(":"); switch (d[0].trim()) { case "left": var e = document.getElementById("left"); b += d[0] + ":" + e.value + "px;"; break; case "top": var f = document.getElementById("top"); b += d[0] + ":" + f.value + "px;"; break; case "width": var g = document.getElementById("width"); b += d[0] + ":" + g.value + "px;"; break; case "height": var h = document.getElementById("height"); b += d[0] + ":" + h.value + "px;"; break; default: b += d[0] + ":" + d[1] + ";"; break } } return b } function setLocationFromStyle(a) { var b = a.split(";"); for (i in b) { var c = b[i].split(":"); if (c.length < 2) continue; var d = c[1].trim().replace("px", ""); switch (c[0].trim()) { case "left": var e = document.getElementById("left"); e.value = d; break; case "top": var f = document.getElementById("top"); f.value = d; break; case "width": var g = document.getElementById("width"); g.value = d; break; case "height": var h = document.getElementById("height"); h.value = d; break } } } function onUnderlineClick() { var a = document.getElementById("Underline"); if (style2 && style2.length > 0) { if (a.checked) setStyle2("text-decoration", "underline"); else setStyle2("text-decoration", "none") } else { if (a.checked) setStyle("text-decoration", "underline"); else setStyle("text-decoration", "none") } } function onItalicClick() { var a = document.getElementById("Italic"); if (style2 && style2.length > 0) { if (a.checked) setStyle2("font-style", "italic"); else setStyle2("font-style", "normal") } else { if (a.checked) setStyle("font-style", "italic"); else setStyle("font-style", "normal") } } function onBoldClick() { var a = document.getElementById("Bold"); if (style2 && style2.length > 0) { if (a.checked) setStyle2("font-weight", "bold"); else setStyle2("font-weight", "normal") } else { if (a.checked) setStyle("font-weight", "bold"); else setStyle("font-weight", "normal") } } function OnFontSizeClientSelectedIndexChanged(a, b) { var c = b.get_item(); if (style2 && style2.length > 0) setStyle2("font-size", c.get_value()); else setStyle("font-size", c.get_value()) } function OnFontFamilyClientSelectedIndexChanged(a, b) { var c = b.get_item(); if (style2 && style2.length > 0) setStyle2("font-family", c.get_value()); else setStyle("font-family", c.get_value()) } function OnFontSizeClientLoad(a) { FontSizeCombo = a } function OnFontFamilyClientLoad(a) { FontFamilyCombo = a } var style; var style2; var FontFamilyCombo; var FontSizeCombo