function storeTableSelectedIndex(a) { var b = a.target.parentNode; var c = 0; while (b.localName != "li") { b = b.parentNode; c++; if (c > 10) { alert("Could not find selected row"); return } } var d = b.getAttribute("id"); if (d == null) d = b.parentNode.getAttribute("id"); var e = b.parentNode.parentNode.parentNode; var f = d.substring(d.lastIndexOf("_") + 1); var g = e.getAttribute("id"); $("#" + g).data("selectedIndex", f); a.stopPropagation() } function getFieldFromFieldName(a) { var b = document.getElementsByName(a); var c = null; if (b == null || b.length == 0) c = document.getElementById(a); else c = b[0]; return c } function getFieldType(a) { var b = getFieldFromFieldName(a); if (b == null) return null; return b.getAttribute("field_type") } function getFieldValue(a) { var b = getFieldFromFieldName(a); if (b == null) return null; var c = b.getAttribute("field_type"); switch (c) { case "table_field": var d = b.parentNode; var e = 0; while (d.localName != "ul") { d = d.parentNode; e++; if (e > 10) { alert("Could not find selected row"); return } } var f = d.parentNode.parentNode.getAttribute("id"); var g = $("#" + f).data("selectedIndex"); var h = $('[name="' + a + '"]').get(g); if (h.localName == "input") return h.value; else return h.textContent; case "longitude": if (geo_position_js.init()) { geo_position_js.getCurrentPosition(success_callback, error_callback) } else alert("GPS is not available"); return longitude; case "latitude": if (geo_position_js.init()) { geo_position_js.getCurrentPosition(success_callback, error_callback) } else alert("GPS is not available"); return latitude; case "hidden_field": if (b.value && b.value.indexOf("|") >= 0) { var i = b.value.split("|"); return i[0] } else return b.value; default: return b.value } } function getFieldArrayValues(a) { var b = getFieldFromFieldName(a); if (b == null) return null; var c = new Array; return c } function getFieldFloatValue(a) { var b = getFieldFromFieldName(a); if (b == null) return null } function setFieldArrayValues(a, b) { var c = getFieldFromFieldName(a); if (c == null) return null; var d = b.length; var e = c.getAttribute("field_type"); switch (e) { case "table_field": var f = c; var g = 0; while (f.localName != "li") { f = f.parentNode; g++; if (g > 10) { alert("Could not find selected row"); return } } var h = f.parentNode; var i = h.childNodes.length; if (i - 1 != d) { var j = h.childNodes; for (var k = 2; k < j.length; k++) { h.removeChild(j[k]) } for (var k = 1; k < d; k++) { h.appendChild(f.cloneNode(true)) } } var l = false; $('td[name="' + a + '"]').each(function (a, c) { l = true; if (c.childNodes[0].nodeName == "IMG") $(this).children().attr("src", b[a]); else $(this).children().text(b[a]); var e = $(this).parent().parent().parent().parent().parent().parent().parent().parent().parent().parent().attr("id"); $(this).parent().parent().parent().parent().parent().parent().parent().attr("id", e + "_" + a); if (a == d - 1) { $(this).parent().parent().parent().parent().parent().parent().parent().addClass("ui-corner-bottom") } else { $(this).parent().parent().parent().parent().parent().parent().parent().removeClass("ui-corner-bottom ") } }); if (!l) { $('input[name="' + a + '"]').each(function (a, c) { $(this).val(b[a]) }) } $("nav").touchScroll(); break; case "hidden_field": var m = true; var n = ""; for (var o = 0; o < d; o++) { if (m) m = false; else n += "|"; n += b[o] } $("#" + a).val(n); break } } function setFieldValue(a, b) { var c = getFieldFromFieldName(a); if (c == null) return null; var d = c.getAttribute("field_type"); switch (d) { case "web_view": c.firstChild.setAttribute("src", b); if (b.toLowerCase().indexOf("youtube.com") >= 0) c.firstChild.setAttribute("class", "youtube-player"); else c.removeAttribute("class"); break; case "text_area": $("#" + a).children().first().children().first().text(b); break; case "text_field": $("#" + a).attr("value", b); break; case "switch": if (b == "true") { $("#" + a + "_0").attr("checked", "checked"); $("#" + a + "_0").next().removeClass("ui-checkbox-off"); $("#" + a + "_0").next().addClass("ui-checkbox-on"); $("#" + a + "_0").next().children().first().children().last().removeClass("ui-icon-checkbox-off"); $("#" + a + "_0").next().children().first().children().last().addClass("ui-icon-checkbox-on") } else { $("#" + a + "_0").removeAttr("checked"); $("#" + a + "_0").next().removeClass("ui-checkbox-on"); $("#" + a + "_0").next().addClass("ui-checkbox-off"); $("#" + a + "_0").next().children().first().children().last().removeClass("ui-icon-checkbox-on"); $("#" + a + "_0").next().children().first().children().last().addClass("ui-icon-checkbox-off") } break; case "hidden_field": $("#" + a).val(b); break; default: $("#" + a).text(b); break } $("nav").touchScroll() } function isNumber(a) { return isNaN(Number(a)) ? false : true } function isImageField(a) { var b = getFieldFromFieldName(a); var c = b.getAttribute("field_type"); return c == "image" ? true : false } function gotoPage(a) { var b = "#" + a; $.mobile.changePage(b, { transition: viziapps_transition_type }) } function gotoPageFromTableField(a) { var b = "#" + getFieldValue(a); $.mobile.changePage(b, { transition: viziapps_transition_type }) } function showAlert(a, b, c) { $("#" + a).click(); $("#" + a + "_title").text(b); $("#" + a + "_message").text(c) } function doFieldCompute(a, b) { if (b != null && b.length > 0) { var c = b.split("|"); for (var d = 0; d < c.length; d++) { var e = c[d]; var f = e.split(";"); var g = new Array; for (var h = 0; h < f.length; h++) { if (f[h] != "") g.push(f[h]) } var i = 0; var j = null; var k = null; if (g.length >= 3) { for (var h = 0; h < g.length; h++) { var l = g[h]; var m = l.split(":"); var n = m[0]; if (n == "assign") { j = m[1]; if (checkComputeKeyword(j)) break } else if (n == "first") { var o = m[1]; if (isNumber(o)) i = Number(o); else i = getFieldFloatValue(o) } else if (n == "op") { var p = m[1]; var q = p.split(","); var r = q[0]; var s = q[1]; var t = 0; if (isNumber(s)) t = s; else t = getFieldFloatValue(s); if (r == "+") { i += t } else if (r == "-") { i -= t } else if (r == "*") { i *= t } else if (r == "/") { i /= t } } } var u = fieldMap.get(j); var v = u.get("type"); if (v == "text_field") { var w = fieldMap.get(j); var x = w.get("field"); x.setText(format("%.2f", i)) } else if (v == "label") { var y = fieldMap.get(j); var z = y.get("field"); z.setText(format("%.2f", i)) } } else { var A = false; for (var h = 0; h < g.length; h++) { var l = g[h]; var m = l.split(":"); if (m.length < 2) break; var n = m[0]; if (n == "assign") { j = m[1]; if (checkComputeKeyword(j)) { A = true; break } } else if (n == "first") { k = m[1] } } if (A) continue; var B = null; var C = new Array; if (k == null) return; if (k.toLowerCase() == "now()") { var D = new Date; B = D.getFullYear + "-" + D.getMonth + "-" + D.getDay + " " + D.getHours + ":" + D.getMinutes + ":" + D.getSeconds } else if (k.toLowerCase() == "true" || k.toLowerCase() == "false") { B = k.toLowerCase() } else { B = getFieldValue(k); if (B == null) { alert("Cannot find field value for " + k) } } if (C != null && C.length > 0) setFieldArrayValues(j, C); else setFieldValue(j, B) } } } } function checkComputeKeyword(a) { var b = a.toLowerCase(); if (b.indexOf("playaudio(") >= 0) { var c = a.indexOf("("); if (c >= 0) { c++; var d = a.indexOf(")", c); var e = a.substring(c, d) } return true } else if (b.indexOf("showwebpage(") >= 0) { var c = a.indexOf("("); if (c >= 0) { c++; var d = a.indexOf(")", c); var e = a.substring(c, d); var f = getFieldValue(e); window.location.href = f } return true } return false } function getPhoto() { navigator.camera.getPicture(onPhotoURISuccess, onPhotoFail, { quality: 50, destinationType: navigator.camera.DestinationType.FILE_URI }) } function onPhotoURISuccess(a) { var b = document.getElementById("viziapps_photo_image"); b.style.display = "block"; b.src = a } function onPhotoFail(a) { alert("Photo Capture Failed") } function getGPS() { gps_timer_id = navigator.geolocation.watchPosition(onGPSSuccess, onGPSFail, { enableHighAccuracy: true, timeout: 2 }) } function stopGPS() { if (gps_timer_id > 0) { navigator.geolocation.clearWatch(gps_timer_id); gps_timer_id = -1 } } function startWebGPS() { gps_interval_id = window.setInterval("getWebGPS()", 2e3) } function stopWebGPS() { window.clearInterval(gps_interval_id) } function getWebGPS() { navigator.geolocation.getCurrentPosition(function (a) { document.getElementById("viziapps_gps_latitude").value = a.coords.latitude; document.getElementById("viziapps_gps_latitude").value = a.coords.longitude }) } function showLoading() { $("#viziapps_spinner").show() } function hideLoading() { $("#viziapps_spinner").hide() } function getXmlDOMFromString(a) { if (window.ActiveXObject && window.GetObject) { var b = new ActiveXObject("Microsoft.XMLDOM"); b.loadXML(a); return b } if (window.DOMParser) { return (new DOMParser).parseFromString(a, "text/xml") } throw new Error("No XML parser available") } function getDeviceType() { var a = navigator.userAgent; var b = { iphone: a.match(/(iPhone)/), ipod: a.match(/(iPod)/), ipad: a.match(/(iPad)/), blackberry: a.match(/BlackBerry/), android: a.match(/Android/) }; if (b.android) { return "android" } else if (b.iphone) { return "iphone" } else if (b.ipod) { return "ipod" } else if (b.ipad) { return "ipad" } else if (b.blackberry) { return "blackberry" } else { return "unknown" } } function startsWith(a, b) { return a.indexOf(b) == 0 } var reportURL = "https://viziapps.mobi/mobiflex/ViziAppsPortal/WebAppService.aspx"; var GAppsAccessUrl = "https://viziapps.mobi/gapps/default.aspx"; var AWSServiceUrl = "https://viziapps.mobi/AWSService/UploadFile.aspx"; var previous_page_name; var current_page_name; var previous_orientation; $(function () { $.support.cors = true; $(document).bind("mobileinit", function () { $.mobile.allowCrossDomainPages = true }); $("nav").touchScroll(); $('div[data-role="page"]').live("pageshow", function (a, b) { previous_page_name = b.prevPage; current_page_name = $(this).id }) }); var gps_timer_id = -1; var onGPSSuccess = function (a) { if (!a) return; document.getElementById("viziapps_gps_latitude").value = a.coords.latitude; document.getElementById("viziapps_gps_latitude").value = a.coords.longitude }; var onGPSFail = function (a) { alert("Error: " + a.code) }; var gps_interval_id; $("#viziapps_spinner").bind("ajaxSend", function () { $(this).show() }).bind("ajaxStop", function () { $(this).hide() }).bind("ajaxError", function () { $(this).hide() }); var _gaq = _gaq || []; _gaq.push(["_setAccount", "UA-25325643-3"]); _gaq.push(["_trackPageview"]); (function () { var a = document.createElement("script"); a.type = "text/javascript"; a.async = true; a.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js"; var b = document.getElementsByTagName("script")[0]; b.parentNode.insertBefore(a, b) })(); $("[data-role=page]").live("pageshow", function (a, b) { try { var c = _gat._getTracker("UA-25325643-3"); c._trackPageview() } catch (d) { } })