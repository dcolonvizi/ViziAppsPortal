function changeAction(a, b) { var c = null; switch (a.get_value()) { case "if_then_next_page": case "previous_page": case "next_page": case "post": case "call": case "share": case "email": case "sms": case "take_photo": case "capture_signature": case "login_to_mcommerce": case "init_card_swiper": case "manual_card_charge": case "void_charge": case "call_intuit_gopayment": case "capture_process_document": case "manage_document_case": c = a.get_value() + "_view"; break; default: c = "no_view"; break } var d = document.getElementById("actionsMultiPage"); for (var e = 0; e < d.control._pageViewData.length; e++) { if (d.control._pageViewData[e].id == c) { d.control._selectPageViewByIndex(e); $(".param").each(function (a, b) { $(this).remove() }); return } } d.control._selectPageViewByIndex(0); $(".param").each(function (a, b) { $(this).remove() }) } function setComboValue(a, b) { if (a.control) { a.control.trackChanges(); var c = a.control.findItemByValue(b); if (c) { c.select() } a.control.commitChanges() } else { a.trackChanges(); var c = a.findItemByValue(b); if (c) { c.select() } a.commitChanges() } } function OnClientGoToPagesLoadHandler(a) { gotoPageCombo = a } function OnClientpage_if_trueLoadHandler(a) { page_if_true = a } function OnClientpage_if_falseLoadHandler(a) { page_if_false = a } function GoToPages_SelectedIndexChanged(a, b) { next_page_value = a.get_text() } function next_page_condition_Changed(a, b) { next_page_condition_value = a.value } function page_if_true_SelectedIndexChanged(a, b) { page_if_true_value = a.get_text() } function page_if_false_SelectedIndexChanged(a, b) { page_if_false_value = a.get_text() } function contains(a, b) { return a.indexOf(b) >= 0 ? true : false } function addPropertySelected(a, b) { addProperty(b, a.options[a.selectedIndex].label, a.value); a.selectedIndex = 0 } function addProperty(a, b, c) { if (b == undefined) return; var d = b.replaceAll(" ", "_").toLowerCase(); var e = document.getElementById(d); if (e != null) return; var f = d + "_delete"; var g = d + "_div"; $("#" + a).css("display", "none"); if (c != null && c.indexOf("-") >= 0) { $("#" + a).before('<div id="' + g + '"><table style="width: 600px"><tr><td align="left" valign="top" style="width:180px" >' + b + '</td><td valign="top"><input class="param" type="text" id="' + d + '" size="30" /></td><td>[' + c + ']</td><td style="width:20px"><img id="' + f + '" alt="delete" src="../images/delete_small.gif"  /></td></tr></table></div>') } else if (c != null && c.indexOf("TEXTAREA") >= 0) { $("#" + a).before('<div id="' + g + '"><table style="width: 600px"><tr><td align="left" valign="top" style="width:180px" >' + b + '</td><td valign="top"><textarea class="param" rows="4" cols="50" id="' + d + '" size="30" ></textarea></td><td style="width:20px"><img id="' + f + '" alt="delete" src="../images/delete_small.gif"  /></td></tr></table></div>') } else if (c != null && c != b && c.indexOf("NAME") < 0 && c != "URL") { var h = "<option>select -></option>"; var i = c.split(","); for (var j = 0; j < i.length; j++) { h += "<option>" + i[j] + "</option>" } $("#" + a).before('<div id="' + g + '"><table style="width: 600px"><tr><td align="left" valign="top" style="width:180px" >' + b + '</td><td valign="top"><select class="param" id="' + d + '" >"' + h + '"</select></td><td style="width:20px"><img id="' + f + '" alt="delete" src="../images/delete_small.gif"  /></td></tr></table></div>') } else $("#" + a).before('<div id="' + g + '"><table style="width: 600px"><tr><td align="left" valign="top" style="width:180px" >' + b + '</td><td valign="top"><input class="param" type="text" id="' + d + '" size="30" /></td><td style="width:20px"><img id="' + f + '" alt="delete" src="../images/delete_small.gif"  /></td></tr></table></div>'); $("#" + d).focus(); $("#" + d).change(function (d) { if (c != null && c != b) { var e = false; if (c.indexOf("TEXTAREA") >= 0) { } else if (c.indexOf("NAME") >= 0) { this.value = this.value.replaceAll(" ", "_"); if (!IsValidObjectName(this.value)) { alert('entry can only contain either a letter, number, "_" and be 1 to 100 characters long'); return } } else if (c == "URL") { this.value = this.value.replaceAll(" ", "%20"); if (this.value.indexOf("http://") != 0 && this.value.indexOf("https://") != 0) { alert("entry is not a valid URL"); return } } else if (c.indexOf("-") >= 0) { var f = c.split("-"); var g = parseInt(this.value); if (g >= parseInt(f[0]) && g <= parseInt(f[1])) { e = true } if (!e) { alert("entry is outside the valid range"); return } } else { var h = c.split(","); for (var i = 0; i < h.length; i++) { if (this.value == h[i].replaceAll(" ", "")) { e = true; break } } if (!e) { alert("entry does not match possible values"); return } } } d.cancelBubble = true; if (d.stopPropagation) d.stopPropagation(); $("#" + a).css("display", "block") }); $("#" + f).click(function (b) { var c = b.target.attributes[2].value; var d = c.substring(0, c.length - 7) + "_div"; $("#" + d).remove(); $("#" + a).css("display", "block") }) } function initDialog() { var a = document.getElementById("actionsMultiPage"); var b = document.getElementById("actions").control; ArgList = parent.window.getDialogInputArgs(); for (var c = 0; c < ArgList.length; c++) { if (ArgList[c] == null) ArgList[c] = "" } if (ArgList[0].length > 0) { var d = document.getElementById("buttonName"); d.value = ArgList[0]; if (ArgList[0].length > 0) { var e = document.getElementById("insertButtonID"); e.value = "Update Button" } var f = document.getElementById("label"); f.value = ArgList[2]; var g = document.getElementsByName("view_response"); var h = ArgList[1].split(";"); for (var c = 0; c < h.length; c++) { var i = h[c].split(":"); switch (i[0]) { case "post": setComboValue(b, "post"); break; case "next_page": gotoPage_do_select = true; var j = i[1].split("~"); gotoPage_selected_item = j[1]; setComboValue(b, "next_page"); gotoPageCombo = document.getElementById("GoToPages").control; if (gotoPageCombo.get_text() != gotoPage_selected_item) { gotoPageCombo.trackChanges(); gotoPageCombo.set_text(gotoPage_selected_item); gotoPageCombo.commitChanges() } break; case "if_then_next_page": gotoPage_do_select = true; setComboValue(b, "if_then_next_page"); var k = i[1].split(","); var l = k[0].split("~"); var m = document.getElementById("next_page_condition"); m.value = l[1].replaceAll("#gt", ">").replaceAll("#lt", "<").replaceAll("#eq", "="); page_if_true.trackChanges(); l = k[1].split("~"); page_if_true.set_text(l[1]); page_if_true.commitChanges(); page_if_false.trackChanges(); l = k[2].split("~"); page_if_false.set_text(l[1]); page_if_false.commitChanges(); break; case "previous_page": setComboValue(b, "previous_page"); break; case "call": var n = document.getElementById("device_field"); var o = i[1].split("~"); n.value = o[1]; setComboValue(b, "call"); break; case "share": setComboValue(b, "share"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); addProperty("addSharePropertyDiv", s, null); $("#" + r[0]).attr("value", r[1].replaceAll("%3A", ":")) } $("#addSharePropertyDiv").css("display", "block"); break; case "email": setComboValue(b, "email"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); addProperty("addEmailPropertyDiv", s, null); $("#" + r[0]).attr("value", r[1].replaceAll("%3A", ":")) } $("#addEmailPropertyDiv").css("display", "block"); break; case "sms": setComboValue(b, "sms"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); addProperty("addSMSPropertyDiv", s, null); $("#" + r[0]).attr("value", r[1].replaceAll("%3A", ":")) } $("#addSMSPropertyDiv").css("display", "block"); break; case "take_photo": setComboValue(b, "take_photo"); var t = document.getElementById("image_field"); var u = document.getElementById("compression"); var v = document.getElementById("icon_field"); var w = document.getElementById("icon_width"); var x = document.getElementById("icon_height"); var y = i[1].split(","); if (y.length > 0) { for (var q = 0; q < y.length; q++) { var z = y[q].split("~"); switch (z[0]) { case "image_field": t.value = z[1]; break; case "compression": u.value = z[1]; break; case "icon_field": v.value = z[1]; break; case "icon_width": w.value = z[1]; break; case "icon_height": x.value = z[1]; break } } } else { v.value = ""; w.value = "60"; x.value = "80" } break; case "capture_signature": var A = document.getElementById("signature_image_field"); var o = i[1].split("~"); A.value = o[1]; setComboValue(b, "capture_signature"); break; case "login_to_mcommerce": setComboValue(b, "login_to_mcommerce"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); switch (r[0]) { case "mcommerce_username_field": var B = document.getElementById("mcommerce_username_field"); B.value = r[1]; break; case "mcommerce_password_field": var C = document.getElementById("mcommerce_password_field"); C.value = r[1]; break; case "mcommerce_activation_code_field": var D = document.getElementById("mcommerce_activation_code_field"); D.value = r[1]; break; case "mcommerce_login_page_name": var E = document.getElementById("mcommerce_login_page_name"); E.value = r[1]; break; case "mcommerce_login_alert_field": var F = document.getElementById("mcommerce_login_alert_field"); F.value = r[1]; break; case "mcommerce_login_info_button_name": var G = document.getElementById("mcommerce_login_info_button_name"); G.value = r[1]; break } } break; case "init_card_swiper": setComboValue(b, "init_card_swiper"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); addProperty("addSwiperPropertyDiv", s, null); $("#" + r[0]).attr("value", r[1]) } $("#addSwiperPropertyDiv").css("display", "block"); break; case "manual_card_charge": setComboValue(b, "manual_card_charge"); break; case "void_charge": setComboValue(b, "void_charge"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); addProperty("addVoidPropertyDiv", s, null); $("#" + r[0]).attr("value", r[1]) } $("#addVoidPropertyDiv").css("display", "block"); break; case "call_intuit_gopayment": setComboValue(b, "call_intuit_gopayment"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); switch (r[0]) { case "amount_field": var H = document.getElementById("intuit_gopayment_amount_field"); H.value = r[1]; break; case "gopayment_response_field": var I = document.getElementById("intuit_gopayment_response_field"); I.value = r[1]; break } } break; case "capture_process_document": setComboValue(b, "capture_process_document"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); addProperty("addCaptureProcessDocumentPropertyDiv", s, null); $("#" + r[0]).attr("value", r[1].replaceAll("%3A", ":")) } $("#addCaptureProcessDocumentPropertyDiv").css("display", "block"); break; case "manage_document_case": setComboValue(b, "manage_document_case"); var p = i[1].split(","); for (var q = 0; q < p.length; q++) { var r = p[q].split("~"); var s = r[0].substring(0, 1).toUpperCase() + r[0].substring(1).replaceAll("_", " "); if (s == "About box text") { addProperty("addManageDocumentCasePropertyDiv", s, "TEXTAREA"); $("#" + r[0]).attr("value", unescape(r[1])) } else { addProperty("addManageDocumentCasePropertyDiv", s, null); $("#" + r[0]).attr("value", r[1].replaceAll("%3A", ":")) } } $("#addManageDocumentCasePropertyDiv").css("display", "block"); break; case "compute": var J = document.getElementById("compute"); J.value = i[1].replaceAll("~", "=").replaceAll("|", ";").replaceAll("#gt", ">").replaceAll("#lt", "<").replaceAll(";;", ";"); var K = document.getElementById("docompute"); K.checked = true; break; default: break } } var L = document.getElementById("ButtonImage"); L.src = ArgList[4]; init_default_button_image = ArgList[4] } else { var L = document.getElementById("ButtonImage"); var M = parent.document.getElementById("DefaultButtonImage"); L.src = M.value } style = ArgList[3]; getStyle() } function insertButton() { var a = document.getElementById("buttonName"); if (a.value == null || a.value == "") { alert("Internal Button Name must be filled"); return } if (!IsValidObjectName(a.value)) { alert('Button Name can only contain either a letter, number, space or "_" and be 1 to 100 characters long'); return } a.value = a.value.replaceAll(" ", "_"); var b = document.getElementById("phone"); var c = document.getElementById("link"); ArgList[0] = a.value; var d = document.getElementById("actionsMultiPage"); var e = d.control.get_selectedPageView(); var f = e.get_id(); if (f == "next_page_view") { next_page_value = document.getElementById("GoToPages").control.get_text(); if (next_page_value == null || next_page_value.length == 0 || contains(next_page_value, "Choose Field or Enter")) { alert("The name of the next page must be set"); return } ArgList[1] = "next_page:page~" + next_page_value.replaceAll(" ", "_") + ";" } else if (f == "if_then_next_page_view") { var g = document.getElementById("next_page_condition"); next_page_condition_value = g.value; var h = document.getElementById("page_if_true"); page_if_true_value = h.control.get_text(); var i = document.getElementById("page_if_false"); page_if_false_value = i.control.get_text(); if (next_page_condition_value == null || next_page_condition_value.length == 0) { alert("The if condition must be set"); return } if (!contains(next_page_condition_value, ">") && !contains(next_page_condition_value, "<") && !contains(next_page_condition_value, "=")) { alert("The if condition must contain a logical operation"); return } if (page_if_true_value.length == 0 || contains(page_if_true_value, "Choose Field or Enter")) { alert("The page for the true condition must be set"); return } if (page_if_false_value.length == 0 || contains(page_if_false_value, "Choose Field or Enter")) { alert("The page for the false condition must be set"); return } ArgList[1] = "if_then_next_page:next_page_condition_value~" + next_page_condition_value.replaceAll("<", "#lt").replaceAll(">", "#gt").replaceAll("=", "#eq") + ",page_if_true_value~" + page_if_true_value.replaceAll(" ", "_") + ",page_if_false_value~" + page_if_false_value.replaceAll(" ", "_") + ";" } else if (f == "previous_page_view") { ArgList[1] = "previous_page;" } else if (f == "post_view") { ArgList[1] = "post:;" } else if (f == "call_view") { var b = document.getElementById("device_field"); if (b.value.length == 0) { alert("The name of the phone field must be set."); return } if (!IsValidObjectName(b.value)) { alert('Phone field can only contain either a letter, number or "_" and be 1 to 100 characters long'); return } ArgList[1] = "call:phone_field~" + b.value.replaceAll(" ", "_") + ";" } else if (f == "share_view") { ArgList[1] = "share:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value.replaceAll(":", "%3A") }); if (error) return; ArgList[1] += ";" } else if (f == "email_view") { ArgList[1] = "email:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value.replaceAll(":", "%3A") }); if (error) return; ArgList[1] += ";" } else if (f == "sms_view") { ArgList[1] = "sms:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value.replaceAll(":", "%3A") }); if (error) return; ArgList[1] += ";" } else if (f == "take_photo_view") { ArgList[1] = "take_photo:"; var j = document.getElementById("image_field"); if (j.value == null || j.value == "") { alert("Photo image field must be filled"); return } if (!IsValidObjectName(j.value)) { alert('Photo image field can only contain either a letter, number or "_" and be 1 to 100 characters long'); return } var k = document.getElementById("compression"); if (k.value == null || k.value == "") { alert("Compression field must be filled"); return } if (!IsNumeric(k.value)) { alert("Compression must be between 0.001 to 1.0"); return } var l = parseFloat(k.value); if (l < 1e-4 || l > 1) { alert("Compression must be between 0.001 to 1.0"); return } ArgList[1] += "image_field~" + j.value.replaceAll(" ", "_") + ",compression~" + k.value; var m = document.getElementById("icon_field"); var n = document.getElementById("icon_width"); var o = document.getElementById("icon_height"); varicon_attributes = ""; if (m.value != "") ArgList[1] += ",icon_field~" + m.value.replaceAll(" ", "_") + ",icon_width~" + n.value + ",icon_height~" + o.value; ArgList[1] += ";" } else if (f == "capture_signature_view") { var p = document.getElementById("signature_image_field"); ArgList[1] = "capture_signature:signature_image_field~" + p.value.replaceAll(" ", "_") + ";" } else if (f == "login_to_mcommerce_view") { ArgList[1] = "login_to_mcommerce:"; error = false; $(".mcommerce").each(function (a, b) { if (b.value.length == 0) { alert("All mobile commerce properties must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value }); if (error) return; ArgList[1] += ";" } else if (f == "init_card_swiper_view") { ArgList[1] = "init_card_swiper:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value }); if (error) return; ArgList[1] += ";" } else if (f == "manual_card_charge_view") { ArgList[1] = "manual_card_charge:;" } else if (f == "void_charge_view") { ArgList[1] = "void_charge:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value }); if (error) return; ArgList[1] += ";" } else if (f == "call_intuit_gopayment_view") { var q = document.getElementById("intuit_gopayment_amount_field"); if (q.value.length == 0) { alert("The name of the amount field must be set."); return } if (!IsValidObjectName(q.value)) { alert('Amount field can only contain either a letter, number or "_" and be 1 to 100 characters long'); return } var r = document.getElementById("intuit_gopayment_response_field"); if (r.value.length == 0) { alert("The name of the response field must be set."); return } if (!IsValidObjectName(r.value)) { alert('Response field can only contain either a letter, number or "_" and be 1 to 100 characters long'); return } ArgList[1] = "call_intuit_gopayment:amount_field~" + q.value.replaceAll(" ", "_") + ",gopayment_response_field~" + r.value.replaceAll(" ", "_") + ";" } else if (f == "capture_process_document_view") { ArgList[1] = "capture_process_document:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; ArgList[1] += b.id + "~" + b.value.replaceAll(":", "%3A") }); if (error) return; ArgList[1] += ";" } else if (f == "manage_document_case_view") { ArgList[1] = "manage_document_case:"; error = false; $(".param").each(function (a, b) { if (b.value.length == 0) { alert("All parameters must have values."); error = true; return } if (a > 0) ArgList[1] += ","; if (b.value.indexOf("<") >= 0 || b.value.indexOf("\n") >= 0) ArgList[1] += b.id + "~" + escape(b.value); else ArgList[1] += b.id + "~" + b.value.replaceAll(":", "%3A") }); if (error) return; ArgList[1] += ";" } else ArgList[1] = ""; var s = document.getElementById("docompute"); if (s.checked) { var t = document.getElementById("compute"); if (t.value == null || t.value == "") { alert("Compute field must be filled"); return } ArgList[1] += "compute:" + t.value.replaceAll("=", "~").replaceAll(";", "|").replaceAll(">", "#gt").replaceAll("<", "#lt") + "|" } var u = document.getElementById("label"); if (u.value == null || u.value == "") { alert("Button Label must be filled"); return } ArgList[2] = u.value; ArgList[3] = style; var v = document.getElementById("ButtonImage"); ArgList[4] = v.src; var w = parent.document.getElementById("DefaultButtonImage"); w.value = v.src; parent.window.InsertButtonCallback(ArgList) } function onSetButtonColorClientClose(a, b) { var c = b.get_argument(); if (c) { var d = document.getElementById("ButtonImage"); d.src = c } } function showSetButtonColorClient() { var a = radopen("../Dialogs/Design/ButtonColor.aspx", "buttonColor"); a.set_visibleTitlebar(true); a.set_visibleStatusbar(false); a.set_modal(true); a.setSize(200, 460); a.moveTo(450, 0); a.add_close(onSetButtonColorClientClose); return false } function getActionsIndex(a) { var b = document.getElementById("actions"); var c = b.control.get_visibleItems(); for (var d = 0; d < c.length; d++) { if (c[d].get_value() == a) { return d } } return 0 } function IsNumeric(a) { return /^-?(0|[1-9]\d*|(?=\.))(\.\d+)?$/.test(a) } function htmlEncode(a) { return $("<div/>").text(a).html() } function htmlDecode(a) { return $("<div/>").html(a).text() } if (window.attachEvent) { window.attachEvent("onload", initDialog) } else if (window.addEventListener) { window.addEventListener("load", initDialog, false) } var ArgList = null; var gotoPageCombo; var page_if_true; var page_if_false; var next_page_value; var next_page_condition_value; var page_if_true_value; var page_if_false_value; $(function () { }); var init_default_button_image; var error = false